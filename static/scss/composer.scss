.composer {
	@include no-select;

	background-color: $body-bg;
	color: $body-color;
	z-index: $zindex-modal;
	visibility: hidden;
	padding: 0;
	position: fixed;
	bottom: 0;
	top: 0;
	right: 0;
	left: 0;

	.mobile-navbar {
		position: static;
		min-height: 40px;
		margin: 0;

		.btn-group {
			flex-shrink: 0;
		}

		button {
			font-size: 20px;
		}

		display: flex;

		.category-name-container, .title {
			text-align: center;
			text-overflow: ellipsis;
			overflow: hidden;
			white-space: nowrap;
			flex-grow: 2;
			font-size: 16px;
			line-height: inherit;
			padding: 9px 5px;
			margin: 0;
		}
	}

	.title-container {
		> div[data-component="composer/handle"] {
			flex: 0.33;
		}

		.category-list-container {

			[component="category-selector"] {
				margin-right: 0.5em;

				.category-dropdown-menu {
					max-height: 300px;
				}
			}
		}

		.category-list {
			padding: 0 2rem;
		}

		.action-bar {
			.dropdown-menu:empty {
				& ~ .dropdown-toggle {
					display: none;
				}
			}
		}
	}

	.formatting-bar {
		margin: 0;

		.spacer {
			&:before {
				content: ' | ';
				color: $gray-200;
			}
		}

		.formatting-group {
			li {
				&[data-format="thumbs"][data-count]:after {
					content: attr(data-count);
					background: $info;
					color: $white;
					font-weight: 600;
					position: absolute;
					top: 5px;
					left: 2.5em;
					padding: 0px 5px;
					border-radius: 5px;
					font-size: 0.75em;
				}
			}
		}
	}

	.tags-container {
		[component="composer/tag/dropdown"] {
			.dropdown-menu {
				max-height: 400px;
				overflow-y: auto;
			}

			> button {
				border: 0;
			}
		}
		// if picking tags from taglist dropdown hide the input
		&.haswhitelist .bootstrap-tagsinput {
			input {
				display: none;
			}
		}
		.bootstrap-tagsinput {
			background: transparent;
			flex-grow: 1;
			border: 0;
			padding: 4px 6px;
			box-shadow: none;
			max-height: 80px;
			overflow: auto;

			input {
				&::placeholder{
					color: $input-placeholder-color;
				}
				color: $body-color;
				font-size: 16px;
				width: 50%;
				height: 28px;
				padding: 4px 6px;
			}

			.label {
				color: white;
				font-size: 13px;
			}
		}
	}

	.resizer {
		background: linear-gradient(transparent, #fff);
		margin-left: calc($spacer * -0.5);
		padding-left: $spacer;

		.trigger {
			cursor: ns-resize;

			.handle {
				border-top-left-radius: 50%;
				border-top-right-radius: 50%;
				border-bottom: 0 !important;
			}
		}
	}

	.minimize {
		display: none;
		position: absolute;
		top: 0px;
		right: 10px;
		height: 0;

		@include pointer;

		.trigger {
			position: relative;
			display: block;
			top: -20px;
			right: 0px;
			margin: 0 auto;
			margin-left: 20px;
			line-height: 26px;
			@include transition(filter .15s linear);

			&:hover {
				filter: invert(100%);
			}

			i {
				width: 32px;
				height: 32px;
				background: #333;
				border: 1px solid #333;
				border-radius: 50%;

				position: relative;

				color: #FFF;
				font-size: 16px;

				&:before {
					position: relative;
					top: 25%;
				}
			}
		}
	}

	&.reply {
		.title-container {
			display: none;
		}
	}

	&.resizable.maximized {
		.resizer {
			top: 0 !important;
			background: transparent;

			.trigger {
				.handle {
					border-top-left-radius: 0%;
					border-top-right-radius: 0%;
					border-bottom-left-radius: 50%;
					border-bottom-right-radius: 50%;
					border-bottom: var(--bs-border-width) var(--bs-border-style) var(--bs-border-color) !important;
				}

				i {
					&:before {
						content: fa-content($fa-var-chevron-down);
					}
				}
			}
		}
	}

	.draft-icon {
		font-family: 'FontAwesome';
		color: $success;
		margin: 0 1em;
		opacity: 0;

		&::before {
			content: fa-content($fa-var-save);
			position: relative;
			top: 25%;
		}

		&::after {
			content: fa-content($fa-var-check);
			position: relative;
			top: 18px;
			font-size: 0.7em;
			left: -15%;
		}

		&.active {
			animation: draft-saved 3s ease;
		}
	}
}

.datetime-picker {
	display: flex;
	justify-content: center;
	flex-direction: row;
	min-width: 310px;
	max-width: 310px;
	margin: 0 auto;

	input {
		flex: 3;
		line-height: inherit;
	}

	input + input {
		border-left: none;
		flex: 2;
	}
}

.modal.topic-scheduler {
	z-index: 1070;
	& + .modal-backdrop {
		z-index: 1060;
	}
}

@keyframes draft-saved {
	0%, 100% {
		opacity: 0;
	}

	15% {
		opacity: 1;
	}

	30% {
		opacity: 0.5;
	}

	45% {
		opacity: 1;
	}

	85% {
		opacity: 1;
	}
}

@keyframes pulse {
	from {
		transform: scale(1);
		color: inherit;
	}
	50% {
		transform: scale(.9);
	}
	to {
		transform: scale(1);
		color: #00adff;
	}
}

@include media-breakpoint-up(md) {
	html.composing {
		.composer {
			left: 15%;
			width: 70%;
		}
	}
}

@include media-breakpoint-down(md) {
	html.composing {
		.composer {
			height: 100%;
			z-index: $zindex-modal;

			.draft-icon {
				position: absolute;
				bottom: 1em;
				right: 0em;

				&::after {
					top: 7px;
				}
			}

			.preview-container {
				max-width: initial;
			}
		}

		body {
			padding-bottom: 0 !important;
		}
	}
}

@include media-breakpoint-up(md) {
	@import './medium';
}

@import './zen-mode';
@import './page-compose';
@import './textcomplete';

